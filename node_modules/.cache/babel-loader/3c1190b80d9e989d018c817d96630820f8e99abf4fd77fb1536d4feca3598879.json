{"ast":null,"code":"var _jsxFileName = \"/Users/vishnudhanda/Documents/Lotion-A-Note-Taking-Application/src/NoteItem.js\",\n  _s = $RefreshSig$();\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NoteItem(_ref) {\n  _s();\n  let {\n    ID,\n    Title,\n    Note,\n    NotePreview,\n    noteDate,\n    active\n  } = _ref;\n  const options = {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n    hour: \"numeric\",\n    minute: \"numeric\"\n  };\n  const {\n    currentID\n  } = useParams();\n  if (currentID === ID) {\n    activeNote = document.getElementsByClassName(\"noteCard\");\n    activeNote.classList.add('activeNote');\n  }\n  const previewLength = 180; // Choose a number of characters to display for the preview\n\n  const formatDate = when => {\n    const formatted = new Date(when).toLocaleString(\"en-US\", options);\n    if (formatted === \"Invalid Date\") {\n      return \"\";\n    }\n    return formatted;\n  };\n  const formattedDate = noteDate ? formatDate(noteDate) : \"\";\n  let preview = Note.substring(0, previewLength); // Extract the first 450 characters from the Note string\n\n  if (Note.length > previewLength || Note.length === 0) {\n    preview += \"...\"; // Add \"...\" at the end if the Note string has more than 450 characters\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"noteCard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"noteHeading\",\n      children: Title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"noteDate\",\n      children: formattedDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notePreview\",\n      dangerouslySetInnerHTML: {\n        __html: preview\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(NoteItem, \"d8eWmXfqpOgqcoz4Plw+BuLT6+c=\", false, function () {\n  return [useParams];\n});\n_c = NoteItem;\nvar _c;\n$RefreshReg$(_c, \"NoteItem\");","map":{"version":3,"names":["useParams","jsxDEV","_jsxDEV","NoteItem","_ref","_s","ID","Title","Note","NotePreview","noteDate","active","options","year","month","day","hour","minute","currentID","activeNote","document","getElementsByClassName","classList","add","previewLength","formatDate","when","formatted","Date","toLocaleString","formattedDate","preview","substring","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["/Users/vishnudhanda/Documents/Lotion-A-Note-Taking-Application/src/NoteItem.js"],"sourcesContent":["import { useParams } from \"react-router-dom\";\n\nexport default function NoteItem({ ID, Title, Note, NotePreview, noteDate, active }) {\n  const options = {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n    hour: \"numeric\",\n    minute: \"numeric\",\n  };\n  \n  const {currentID} = useParams()\n  if (currentID === ID){\n    activeNote = document.getElementsByClassName(\"noteCard\")\n    activeNote.classList.add('activeNote')\n  }\n  const previewLength = 180; // Choose a number of characters to display for the preview\n\n  const formatDate = (when) => {\n    const formatted = new Date(when).toLocaleString(\"en-US\", options);\n    if (formatted === \"Invalid Date\") {\n      return \"\";\n    }\n    return formatted;\n  };\n\n  const formattedDate = noteDate ? formatDate(noteDate) : \"\";\n\n  let preview = Note.substring(0, previewLength); // Extract the first 450 characters from the Note string\n\n  if (Note.length > previewLength || Note.length === 0) {\n    preview += \"...\"; // Add \"...\" at the end if the Note string has more than 450 characters\n  }\n\n  return (\n    <div className=\"noteCard\">\n      <div className=\"noteHeading\">{Title}</div>\n      <div className=\"noteDate\">{formattedDate}</div>\n      <div\n        className=\"notePreview\"\n        dangerouslySetInnerHTML={{ __html: preview}}\n      ></div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,eAAe,SAASC,QAAQA,CAAAC,IAAA,EAAqD;EAAAC,EAAA;EAAA,IAApD;IAAEC,EAAE;IAAEC,KAAK;IAAEC,IAAI;IAAEC,WAAW;IAAEC,QAAQ;IAAEC;EAAO,CAAC,GAAAP,IAAA;EACjF,MAAMQ,OAAO,GAAG;IACdC,IAAI,EAAE,SAAS;IACfC,KAAK,EAAE,MAAM;IACbC,GAAG,EAAE,SAAS;IACdC,IAAI,EAAE,SAAS;IACfC,MAAM,EAAE;EACV,CAAC;EAED,MAAM;IAACC;EAAS,CAAC,GAAGlB,SAAS,EAAE;EAC/B,IAAIkB,SAAS,KAAKZ,EAAE,EAAC;IACnBa,UAAU,GAAGC,QAAQ,CAACC,sBAAsB,CAAC,UAAU,CAAC;IACxDF,UAAU,CAACG,SAAS,CAACC,GAAG,CAAC,YAAY,CAAC;EACxC;EACA,MAAMC,aAAa,GAAG,GAAG,CAAC,CAAC;;EAE3B,MAAMC,UAAU,GAAIC,IAAI,IAAK;IAC3B,MAAMC,SAAS,GAAG,IAAIC,IAAI,CAACF,IAAI,CAAC,CAACG,cAAc,CAAC,OAAO,EAAEjB,OAAO,CAAC;IACjE,IAAIe,SAAS,KAAK,cAAc,EAAE;MAChC,OAAO,EAAE;IACX;IACA,OAAOA,SAAS;EAClB,CAAC;EAED,MAAMG,aAAa,GAAGpB,QAAQ,GAAGe,UAAU,CAACf,QAAQ,CAAC,GAAG,EAAE;EAE1D,IAAIqB,OAAO,GAAGvB,IAAI,CAACwB,SAAS,CAAC,CAAC,EAAER,aAAa,CAAC,CAAC,CAAC;;EAEhD,IAAIhB,IAAI,CAACyB,MAAM,GAAGT,aAAa,IAAIhB,IAAI,CAACyB,MAAM,KAAK,CAAC,EAAE;IACpDF,OAAO,IAAI,KAAK,CAAC,CAAC;EACpB;;EAEA,oBACE7B,OAAA;IAAKgC,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvBjC,OAAA;MAAKgC,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAE5B;IAAK;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO,eAC1CrC,OAAA;MAAKgC,SAAS,EAAC,UAAU;MAAAC,QAAA,EAAEL;IAAa;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO,eAC/CrC,OAAA;MACEgC,SAAS,EAAC,aAAa;MACvBM,uBAAuB,EAAE;QAAEC,MAAM,EAAEV;MAAO;IAAE;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACvC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACH;AAEV;AAAClC,EAAA,CA1CuBF,QAAQ;EAAA,QASVH,SAAS;AAAA;AAAA0C,EAAA,GATPvC,QAAQ;AAAA,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}