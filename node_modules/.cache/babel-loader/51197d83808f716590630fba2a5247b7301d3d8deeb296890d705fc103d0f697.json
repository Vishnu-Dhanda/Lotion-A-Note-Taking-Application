{"ast":null,"code":"var _jsxFileName = \"/Users/vishnudhanda/Library/CloudStorage/OneDrive-UniversityofCalgary/University 2023/ENSF 381/assignment-06-lotion-Vishnu-Dhanda/src/EditNote.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditNote() {\n  _s();\n  const options = {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n    hour: \"numeric\",\n    minute: \"numeric\"\n  };\n  const formatDate = when => {\n    const formatted = new Date(when).toLocaleString(\"en-US\", options);\n    if (formatted === \"Invalid Date\") {\n      return \"\";\n    }\n    return formatted;\n  };\n  // this is for the react quill\n  const [value, setValue] = useState('');\n  const {\n    id\n  } = useParams();\n  const [notesObjects, setNotes] = useOutletContext();\n  const navigate = useNavigate(); // add this hook to use navigation\n\n  const note = notesObjects.find(note => note.ID === id);\n  if (!note) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"noNoteFound\",\n      children: \"Note not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this);\n  }\n\n  // set initial values for title and date variables\n  const [title, setTitle] = useState(note.Title);\n  const [date, setDate] = useState(note.date);\n  const handleDelete = () => {\n    if (window.confirm(\"Are you sure you want to delete this note?\")) {\n      const updatedNotes = notesObjects.filter(note => note.ID !== id);\n      setNotes(updatedNotes);\n      if (updatedNotes.length > 0) {\n        navigate(`/ViewNote/${updatedNotes[0].ID}`, {\n          replace: true\n        });\n      }\n      if (updatedNotes.length === 0) {\n        navigate(`/`, {\n          replace: true\n        });\n      }\n    }\n  };\n  const handleSave = () => {\n    const note = notesObjects.find(note => note.ID === id);\n    note.noteContent = value;\n    note.Title = title;\n    note.notePreview = value;\n    note.date = formatDate(date);\n    console.log(note);\n    navigate(`/ViewNote/${note.ID}`, {\n      replace: true\n    });\n    console.log(notesObjects);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"test\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editingHeader\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"div1\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"editingHeaderTitle\",\n          type: \"text\",\n          defaultValue: note.Title,\n          onChange: e => setTitle(e.target.value),\n          value: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"editingHeaderDate\",\n          type: \"datetime-local\",\n          onChange: e => setDate(e.target.value),\n          value: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"div2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"editingHeaderSave editButton\",\n          onClick: handleSave,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"editingHeaderDelete editButton\",\n          onClick: handleDelete,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n      theme: \"snow\",\n      value: value,\n      onChange: setValue,\n      defaultValue: note.noteContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n_s(EditNote, \"9AdrwZbk18cxspHo+RlY7Zv+Ll0=\", true);\n_c = EditNote;\nvar _c;\n$RefreshReg$(_c, \"EditNote\");","map":{"version":3,"names":["EditNote","_s","options","year","month","day","hour","minute","formatDate","when","formatted","Date","toLocaleString","value","setValue","useState","id","useParams","notesObjects","setNotes","useOutletContext","navigate","useNavigate","note","find","ID","_jsxDEV","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","setTitle","Title","date","setDate","handleDelete","window","confirm","updatedNotes","filter","length","replace","handleSave","noteContent","notePreview","console","log","type","defaultValue","onChange","e","target","onClick","ReactQuill","theme","_c","$RefreshReg$"],"sources":["/Users/vishnudhanda/Library/CloudStorage/OneDrive-UniversityofCalgary/University 2023/ENSF 381/assignment-06-lotion-Vishnu-Dhanda/src/EditNote.js"],"sourcesContent":["export default function EditNote(){\n    const options = {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n        hour: \"numeric\",\n        minute: \"numeric\",\n    };\n    \n    const formatDate = (when) => {\n        const formatted = new Date(when).toLocaleString(\"en-US\", options);\n        if (formatted === \"Invalid Date\") {\n            return \"\";\n        }\n        return formatted;\n    };\n    // this is for the react quill\n    const [value, setValue] = useState(''); \n    const {id} = useParams();\n    const [notesObjects, setNotes] = useOutletContext();\n    const navigate = useNavigate(); // add this hook to use navigation\n\n    const note = notesObjects.find(note => note.ID === id);\n     if (!note) {\n         return <div className=\"noNoteFound\">Note not found</div>;\n    }\n\n    // set initial values for title and date variables\n    const [title, setTitle] = useState(note.Title); \n    const [date, setDate] = useState(note.date);\n\n    const handleDelete = () => {\n        if (window.confirm(\"Are you sure you want to delete this note?\")) {\n          const updatedNotes = notesObjects.filter(note => note.ID !== id);\n          setNotes(updatedNotes);\n      \n      \n          if (updatedNotes.length > 0) {\n            navigate(`/ViewNote/${updatedNotes[0].ID}`, { replace: true }); \n          }\n          if (updatedNotes.length === 0) {\n            navigate(`/`, { replace: true });\n          }\n        }\n      };\n\n      const handleSave = () => {\n        const note = notesObjects.find(note => note.ID === id);\n        note.noteContent = value\n        note.Title = title\n        note.notePreview = value\n        note.date = formatDate(date)\n        console.log(note)\n        navigate(`/ViewNote/${note.ID}`, { replace: true });\n        console.log(notesObjects)\n      }\n\n \n    return(\n        \n        <div className=\"test\">\n            {/* editing section */}\n\n            \n                <div className=\"editingHeader\">\n                    <div className='div1'>\n                        <input className=\"editingHeaderTitle\" type=\"text\" defaultValue={note.Title} onChange={(e) => setTitle(e.target.value)} value={title} />\n                        <input className=\"editingHeaderDate\" type=\"datetime-local\" onChange={(e) => setDate(e.target.value)} value={date}/> \n                    </div>\n                    <div className='div2'>\n                        <button className=\"editingHeaderSave editButton\" onClick={handleSave}>Save</button>\n                        <button className=\"editingHeaderDelete editButton\" onClick={handleDelete}>Delete</button>\n                    </div>\n                </div>\n                    {/* reactquill section */}  \n                    \n                    <ReactQuill theme=\"snow\" value={value} onChange={setValue}  defaultValue={note.noteContent} />\n                    \n        </div>\n        \n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}