{"ast":null,"code":"var _jsxFileName = \"/Users/vishnudhanda/Library/CloudStorage/OneDrive-UniversityofCalgary/University 2023/ENSF 381/assignment-06-lotion-Vishnu-Dhanda/src/NoteItem.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NoteItem(_ref) {\n  let {\n    ID,\n    Title,\n    Note,\n    NotePreview,\n    noteDate,\n    selected\n  } = _ref;\n  const options = {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n    hour: \"numeric\",\n    minute: \"numeric\"\n  };\n  const previewLength = 280; // Choose a number of characters to display for the preview\n\n  const formatDate = when => {\n    const formatted = new Date(when).toLocaleString(\"en-US\", options);\n    if (formatted === \"Invalid Date\") {\n      return \"\";\n    }\n    return formatted;\n  };\n  const formattedDate = noteDate ? formatDate(noteDate) : \"\";\n  let preview = Note.substring(0, previewLength); // Extract the first 450 characters from the Note string\n\n  if (Note.length > previewLength || Note.length === 0) {\n    preview += \"...\"; // Add \"...\" at the end if the Note string has more than 450 characters\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `noteCard ${selected ? \"selected\" : \"\"}`,\n    onClick: onClick,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"noteHeading\",\n      children: Title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"noteDate\",\n      children: formattedDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notePreview\",\n      dangerouslySetInnerHTML: {\n        __html: preview\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_c = NoteItem;\nvar _c;\n$RefreshReg$(_c, \"NoteItem\");","map":{"version":3,"names":["NoteItem","_ref","ID","Title","Note","NotePreview","noteDate","selected","options","year","month","day","hour","minute","previewLength","formatDate","when","formatted","Date","toLocaleString","formattedDate","preview","substring","length","_jsxDEV","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["/Users/vishnudhanda/Library/CloudStorage/OneDrive-UniversityofCalgary/University 2023/ENSF 381/assignment-06-lotion-Vishnu-Dhanda/src/NoteItem.js"],"sourcesContent":["export default function NoteItem({ ID, Title, Note, NotePreview, noteDate, selected }) {\n  \n  const options = {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n    hour: \"numeric\",\n    minute: \"numeric\",\n  };\n\n  const previewLength = 280; // Choose a number of characters to display for the preview\n\n  const formatDate = (when) => {\n    const formatted = new Date(when).toLocaleString(\"en-US\", options);\n    if (formatted === \"Invalid Date\") {\n      return \"\";\n    }\n    return formatted;\n  };\n\n  const formattedDate = noteDate ? formatDate(noteDate) : \"\";\n\n  let preview = Note.substring(0, previewLength); // Extract the first 450 characters from the Note string\n\n  if (Note.length > previewLength || Note.length === 0) {\n    preview += \"...\"; // Add \"...\" at the end if the Note string has more than 450 characters\n  }\n\n  return (\n    <div className={`noteCard ${selected ? \"selected\" : \"\"}`} onClick={onClick}>\n      <div className=\"noteHeading\">{Title}</div>\n      <div className=\"noteDate\">{formattedDate}</div>\n      <div\n        className=\"notePreview\"\n        dangerouslySetInnerHTML={{ __html: preview}}\n      ></div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,eAAe,SAASA,QAAQA,CAAAC,IAAA,EAAuD;EAAA,IAAtD;IAAEC,EAAE;IAAEC,KAAK;IAAEC,IAAI;IAAEC,WAAW;IAAEC,QAAQ;IAAEC;EAAS,CAAC,GAAAN,IAAA;EAEnF,MAAMO,OAAO,GAAG;IACdC,IAAI,EAAE,SAAS;IACfC,KAAK,EAAE,MAAM;IACbC,GAAG,EAAE,SAAS;IACdC,IAAI,EAAE,SAAS;IACfC,MAAM,EAAE;EACV,CAAC;EAED,MAAMC,aAAa,GAAG,GAAG,CAAC,CAAC;;EAE3B,MAAMC,UAAU,GAAIC,IAAI,IAAK;IAC3B,MAAMC,SAAS,GAAG,IAAIC,IAAI,CAACF,IAAI,CAAC,CAACG,cAAc,CAAC,OAAO,EAAEX,OAAO,CAAC;IACjE,IAAIS,SAAS,KAAK,cAAc,EAAE;MAChC,OAAO,EAAE;IACX;IACA,OAAOA,SAAS;EAClB,CAAC;EAED,MAAMG,aAAa,GAAGd,QAAQ,GAAGS,UAAU,CAACT,QAAQ,CAAC,GAAG,EAAE;EAE1D,IAAIe,OAAO,GAAGjB,IAAI,CAACkB,SAAS,CAAC,CAAC,EAAER,aAAa,CAAC,CAAC,CAAC;;EAEhD,IAAIV,IAAI,CAACmB,MAAM,GAAGT,aAAa,IAAIV,IAAI,CAACmB,MAAM,KAAK,CAAC,EAAE;IACpDF,OAAO,IAAI,KAAK,CAAC,CAAC;EACpB;;EAEA,oBACEG,OAAA;IAAKC,SAAS,EAAG,YAAWlB,QAAQ,GAAG,UAAU,GAAG,EAAG,EAAE;IAACmB,OAAO,EAAEA,OAAQ;IAAAC,QAAA,gBACzEH,OAAA;MAAKC,SAAS,EAAC,aAAa;MAAAE,QAAA,EAAExB;IAAK;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO,eAC1CP,OAAA;MAAKC,SAAS,EAAC,UAAU;MAAAE,QAAA,EAAEP;IAAa;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO,eAC/CP,OAAA;MACEC,SAAS,EAAC,aAAa;MACvBO,uBAAuB,EAAE;QAAEC,MAAM,EAAEZ;MAAO;IAAE;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACvC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACH;AAEV;AAACG,EAAA,GAtCuBlC,QAAQ;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}