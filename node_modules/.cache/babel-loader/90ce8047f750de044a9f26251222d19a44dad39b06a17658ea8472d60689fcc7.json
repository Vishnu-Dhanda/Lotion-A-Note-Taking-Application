{"ast":null,"code":"var _jsxFileName = \"/Users/vishnudhanda/Documents/Lotion-A-Note-Taking-Application/src/ViewNote.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useOutletContext, useParams, Link } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ViewNote() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [notesObjects, setNotes] = useOutletContext();\n  const navigate = useNavigate(); // hook to use navigation\n\n  const note = notesObjects.find(note => note.ID === id);\n  if (!note) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"noNoteFound\",\n      children: \"Note not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }, this);\n  }\n\n  // if (id == note.ID){\n  //     note.activeNote === true\n  // }\n  const handleDelete = () => {\n    if (window.confirm(\"Are you sure you want to delete this note?\")) {\n      const updatedNotes = notesObjects.filter(note => note.ID !== id);\n      setNotes(updatedNotes);\n      if (updatedNotes.length > 0) {\n        navigate(`/ViewNote/${updatedNotes[0].ID}`, {\n          replace: true\n        });\n      }\n      if (updatedNotes.length === 0) {\n        navigate(`/`, {\n          replace: true\n        });\n      }\n    }\n  };\n  const options = {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n    hour: \"numeric\",\n    minute: \"numeric\"\n  };\n  const formatDate = when => {\n    const formatted = new Date(when).toLocaleString(\"en-US\", options);\n    if (formatted === \"Invalid Date\") {\n      return \"\";\n    }\n    return formatted;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"test\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editingHeader\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"div1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"viewingHeaderTitle\",\n          children: note.Title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"viewingHeaderDate\",\n          children: formatDate(note.Date)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"div2\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: '/EditNote/' + note.ID,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"viewingHeaderSave editButton\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)\n        }, note.ID, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"editingHeaderDelete editButton\",\n          onClick: handleDelete,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      dangerouslySetInnerHTML: {\n        __html: note.noteContent\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_s(ViewNote, \"wrNBZrT00xcscsYNbglzgSeayQs=\", false, function () {\n  return [useParams, useOutletContext, useNavigate];\n});\n_c = ViewNote;\nexport default ViewNote;\nvar _c;\n$RefreshReg$(_c, \"ViewNote\");","map":{"version":3,"names":["React","useOutletContext","useParams","Link","useNavigate","jsxDEV","_jsxDEV","ViewNote","_s","id","notesObjects","setNotes","navigate","note","find","ID","className","children","fileName","_jsxFileName","lineNumber","columnNumber","handleDelete","window","confirm","updatedNotes","filter","length","replace","options","year","month","day","hour","minute","formatDate","when","formatted","Date","toLocaleString","Title","to","onClick","dangerouslySetInnerHTML","__html","noteContent","_c","$RefreshReg$"],"sources":["/Users/vishnudhanda/Documents/Lotion-A-Note-Taking-Application/src/ViewNote.js"],"sourcesContent":["import React from \"react\";\nimport {useOutletContext, useParams, Link} from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction ViewNote(){\n  \n    const {id} = useParams();\n    const [notesObjects, setNotes] = useOutletContext();\n    const navigate = useNavigate(); // hook to use navigation\n\n    \n    const note = notesObjects.find(note => note.ID === id);\n     if (!note) {\n         return <div className=\"noNoteFound\">Note not found</div>;\n    }\n\n    // if (id == note.ID){\n    //     note.activeNote === true\n    // }\n    const handleDelete = () => {\n        if (window.confirm(\"Are you sure you want to delete this note?\")) {\n          const updatedNotes = notesObjects.filter(note => note.ID !== id);\n          setNotes(updatedNotes);\n      \n      \n          if (updatedNotes.length > 0) {\n            navigate(`/ViewNote/${updatedNotes[0].ID}`, { replace: true }); \n          }\n          if (updatedNotes.length === 0) {\n            navigate(`/`, { replace: true });\n          }\n        }\n      };\n\n      const options = {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n        hour: \"numeric\",\n        minute: \"numeric\",\n    };\n    \n    const formatDate = (when) => {\n        const formatted = new Date(when).toLocaleString(\"en-US\", options);\n        if (formatted === \"Invalid Date\") {\n            return \"\";\n        }\n        return formatted;\n    };\n\n    return(\n        <div className=\"test\">\n            <div className=\"editingHeader\">\n                <div className='div1'>\n                    <div className=\"viewingHeaderTitle\">{note.Title}</div>\n                    <div className=\"viewingHeaderDate\">{formatDate(note.Date)}</div>\n                </div>\n\n                <div className='div2'>\n                    <Link key={note.ID} to={'/EditNote/'+note.ID} >\n                        <button className=\"viewingHeaderSave editButton\">Edit</button>\n                    </Link>\n                    <button className=\"editingHeaderDelete editButton\" onClick={handleDelete}>Delete</button>\n                </div>\n            </div>\n            <div className=\"content\" dangerouslySetInnerHTML={{ __html: note.noteContent }}></div>\n        </div>\n    )\n}\n\nexport default ViewNote;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}