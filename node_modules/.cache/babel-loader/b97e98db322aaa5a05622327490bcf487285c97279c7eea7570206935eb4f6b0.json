{"ast":null,"code":"var _jsxFileName = \"/Users/vishnudhanda/Library/CloudStorage/OneDrive-UniversityofCalgary/University 2023/ENSF 381/assignment-06-lotion-Vishnu-Dhanda/src/NoteItem.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NoteItem(_ref) {\n  _s();\n  let {\n    ID,\n    Title,\n    Note,\n    NotePreview,\n    noteDate\n  } = _ref;\n  const options = {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n    hour: \"numeric\",\n    minute: \"numeric\"\n  };\n  const formatDate = when => {\n    const formatted = new Date(when).toLocaleString(\"en-US\", options);\n    if (formatted === \"Invalid Date\") {\n      return \"\";\n    }\n    return formatted;\n  };\n  const [formattedDate, setFormattedDate] = useState(noteDate ? formatDate(noteDate) : \"\");\n  const handleDateChange = event => {\n    const newDate = event.target.value;\n    setFormattedDate(newDate);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"noteCard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"noteHeading\",\n      children: Title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"noteDate\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: formattedDate,\n        onChange: handleDateChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notePreview\",\n      dangerouslySetInnerHTML: {\n        __html: NotePreview\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(NoteItem, \"cL2hlQ0s3q40SIYDxRwbWrYkrt4=\");\n_c = NoteItem;\nvar _c;\n$RefreshReg$(_c, \"NoteItem\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","NoteItem","_ref","_s","ID","Title","Note","NotePreview","noteDate","options","year","month","day","hour","minute","formatDate","when","formatted","Date","toLocaleString","formattedDate","setFormattedDate","handleDateChange","event","newDate","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["/Users/vishnudhanda/Library/CloudStorage/OneDrive-UniversityofCalgary/University 2023/ENSF 381/assignment-06-lotion-Vishnu-Dhanda/src/NoteItem.js"],"sourcesContent":["import { useState } from \"react\";\n\nexport default function NoteItem({ ID, Title, Note, NotePreview, noteDate }) {\n  const options = {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n    hour: \"numeric\",\n    minute: \"numeric\",\n  };\n  const formatDate = (when) => {\n    const formatted = new Date(when).toLocaleString(\"en-US\", options);\n    if (formatted === \"Invalid Date\") {\n      return \"\";\n    }\n    return formatted;\n  };\n\n  const [formattedDate, setFormattedDate] = useState(\n    noteDate ? formatDate(noteDate) : \"\"\n  );\n\n  const handleDateChange = (event) => {\n    const newDate = event.target.value;\n    setFormattedDate(newDate);\n  };\n\n  return (\n    <div className=\"noteCard\">\n      <div className=\"noteHeading\">{Title}</div>\n      <div className=\"noteDate\">\n        <input\n          type=\"text\"\n          value={formattedDate}\n          onChange={handleDateChange}\n        />\n      </div>\n      <div\n        className=\"notePreview\"\n        dangerouslySetInnerHTML={{ __html: NotePreview }}\n      ></div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,eAAe,SAASC,QAAQA,CAAAC,IAAA,EAA6C;EAAAC,EAAA;EAAA,IAA5C;IAAEC,EAAE;IAAEC,KAAK;IAAEC,IAAI;IAAEC,WAAW;IAAEC;EAAS,CAAC,GAAAN,IAAA;EACzE,MAAMO,OAAO,GAAG;IACdC,IAAI,EAAE,SAAS;IACfC,KAAK,EAAE,MAAM;IACbC,GAAG,EAAE,SAAS;IACdC,IAAI,EAAE,SAAS;IACfC,MAAM,EAAE;EACV,CAAC;EACD,MAAMC,UAAU,GAAIC,IAAI,IAAK;IAC3B,MAAMC,SAAS,GAAG,IAAIC,IAAI,CAACF,IAAI,CAAC,CAACG,cAAc,CAAC,OAAO,EAAEV,OAAO,CAAC;IACjE,IAAIQ,SAAS,KAAK,cAAc,EAAE;MAChC,OAAO,EAAE;IACX;IACA,OAAOA,SAAS;EAClB,CAAC;EAED,MAAM,CAACG,aAAa,EAAEC,gBAAgB,CAAC,GAAGvB,QAAQ,CAChDU,QAAQ,GAAGO,UAAU,CAACP,QAAQ,CAAC,GAAG,EAAE,CACrC;EAED,MAAMc,gBAAgB,GAAIC,KAAK,IAAK;IAClC,MAAMC,OAAO,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IAClCL,gBAAgB,CAACG,OAAO,CAAC;EAC3B,CAAC;EAED,oBACExB,OAAA;IAAK2B,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvB5B,OAAA;MAAK2B,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAEvB;IAAK;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO,eAC1ChC,OAAA;MAAK2B,SAAS,EAAC,UAAU;MAAAC,QAAA,eACvB5B,OAAA;QACEiC,IAAI,EAAC,MAAM;QACXP,KAAK,EAAEN,aAAc;QACrBc,QAAQ,EAAEZ;MAAiB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAC3B;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE,eACNhC,OAAA;MACE2B,SAAS,EAAC,aAAa;MACvBQ,uBAAuB,EAAE;QAAEC,MAAM,EAAE7B;MAAY;IAAE;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC5C;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACH;AAEV;AAAC7B,EAAA,CAzCuBF,QAAQ;AAAAoC,EAAA,GAARpC,QAAQ;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}